{"version":3,"sources":["app/weatherSlice.js","features/current/Current.js","features/forecast/Forecast.js","features/search/Search.js","app/App.js","app/store.js","index.js"],"names":["fetchCurrent","createAsyncThunk","coords","a","axios","get","process","lat","lon","currentRes","data","fetchForecast","forecastRes","weatherSlice","createSlice","name","initialState","current","forecast","extraReducers","builder","addCase","fulfilled","state","action","payload","useStyles","createUseStyles","currentHeader","display","gridAutoFlow","justifyContent","currentDetailsContainer","alignItems","gridGap","currentDetailsSub","currentHeaderTextContainer","flexDirection","currentHeaderText","fontSize","fontWeight","textOverflow","currentHeaderSubtext","currentDegrees","verticalAlign","lineHeight","marginLeft","currentConditions","gridTemplateColumns","Current","classes","dispatch","useDispatch","useSelector","weather","useEffect","className","main","dt","moment","format","style","maxWidth","src","icon","alt","Math","round","temp","humidity","wind","speed","forecastContainer","gridTemplateRows","dayContainer","textAlign","Forecast","list","map","listItem","marginBottom","max","min","searchInput","padding","height","width","boxShadow","outline","border","Search","value","handleChange","results","borderRadius","onChange","vlaue","placeholder","wrapper","margin","backgroundColor","searchResultsContainer","position","searchResults","maxHeight","overflowY","background","top","searchResultItem","cursor","getLocationcontainer","justifySelf","App","useState","setCoords","searchValue","setSearchValue","setSearchResults","getUserLoaction","navigator","geolocation","getCurrentPosition","latitude","longitude","useLayoutEffect","getSearchLocation","geocoder","window","google","maps","Geocoder","geocode","address","status","formatted_address","debouncedSearch","useMemo","debounce","length","target","result","onClick","lng","handleUpdateCoords","geometry","location","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37a46a5b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  current: {},\n  forecast: {},\n};\n\nexport const fetchCurrent = createAsyncThunk(\n  \"weather/fetchCurrent\",\n  async (coords) => {\n    const currentRes = await axios.get(\n      `${process.env.REACT_APP_WEATHER_BASE_URL}/weather?units=imperial&lat=${coords.lat}&lon=${coords.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n    );\n    return currentRes.data;\n  }\n);\n\nexport const fetchForecast = createAsyncThunk(\n  \"weather/fetchForecast\",\n  async (coords) => {\n    const forecastRes = await axios.get(\n      `${process.env.REACT_APP_WEATHER_BASE_URL}/forecast/daily?units=imperial&lat=${coords.lat}&lon=${coords.lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n    );\n    return forecastRes.data;\n  }\n);\n\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrent.fulfilled, (state, action) => {\n      state.current = { ...action.payload };\n    });\n    builder.addCase(fetchForecast.fulfilled, (state, action) => {\n      state.forecast = { ...action.payload };\n    });\n  },\n});\n\n// export const {} = weatherSlice.actions;\n\nexport default weatherSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCurrent } from \"../../app/weatherSlice\";\nimport { createUseStyles } from \"react-jss\";\nimport moment from \"moment\";\n\nconst useStyles = createUseStyles({\n  currentHeader: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    justifyContent: \"space-between\",\n  },\n  currentDetailsContainer: {\n    display: \"grid\",\n    gridAutoFlow: \"row\",\n    \"@media screen and (min-width: 768px)\": {\n      gridAutoFlow: \"column\",\n    },\n    alignItems: \"start\",\n    gridGap: 8,\n  },\n  currentDetailsSub: {\n    display: \"grid\",\n    gridAutoFlow: \"row\",\n  },\n  currentHeaderTextContainer: {\n    display: \"grid\",\n    flexDirection: \"column\",\n  },\n  currentHeaderText: {\n    fontSize: 32,\n    fontWeight: 700,\n    textOverflow: \"ellipsis\",\n  },\n  currentHeaderSubtext: {\n    fontSize: 12,\n  },\n  currentDegrees: {\n    fontSize: 16,\n    fontWeight: 700,\n    verticalAlign: \"top\",\n    lineHeight: \"24px\",\n    marginLeft: 4,\n  },\n  currentConditions: {\n    display: \"grid\",\n    gridTemplateColumns: \".5fr 1.5fr\",\n    alignItems: \"center\",\n  },\n});\n\nconst Current = ({ coords }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const current = useSelector((state) => state.weather.current);\n\n  useEffect(() => {\n    if (!!coords.lat && !!coords.lon) {\n      dispatch(fetchCurrent(coords));\n    }\n  }, [dispatch, coords]);\n\n  return (\n    <div>\n      <div className={classes.currentHeader}>\n        <div className={classes.currentHeaderTextContainer}>\n          <span className={classes.currentHeaderText}>{current.name}</span>\n          {!!current.weather && (\n            <span className={classes.currentHeaderSubtext}>\n              {current.weather[0].main}\n            </span>\n          )}\n          <span className={classes.currentHeaderSubtext}>\n            {!!current.dt && moment(current.dt * 1000).format(\"dddd, hh:mm A\")}\n          </span>\n        </div>\n        <div className={classes.currentConditions}>\n          {!!current.weather && (\n            <img\n              style={{ maxWidth: 50 }}\n              src={`https://openweathermap.org/img/wn/${current.weather[0].icon}@2x.png`}\n              alt={current.weather[0].main}\n            />\n          )}\n          {current.main && (\n            <div className={classes.currentDetailsContainer}>\n              <div>\n                <span className={classes.currentHeaderText}>\n                  {Math.round(current.main.temp)}\n                </span>\n                <span className={classes.currentDegrees}>&deg; F</span>\n              </div>\n              <div className={classes.currentDetailsSub}>\n                <span style={{ fontSize: 12 }}>\n                  Humidity: {current.main.humidity}&#37;\n                </span>\n                <span style={{ fontSize: 12 }}>\n                  Wind: {current.wind.speed} mph\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Current;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchForecast } from \"../../app/weatherSlice\";\nimport { createUseStyles } from \"react-jss\";\nimport moment from \"moment\";\n\nconst useStyles = createUseStyles({\n  forecastContainer: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridTemplateRows: \"repeat(7, 1fr)\",\n    justifyContent: \"start\",\n    \"@media screen and (min-width: 768px)\": {\n      gridTemplateRows: \"none\",\n      gridTemplateColumns: \"repeat(7, 1fr)\",\n      justifyContent: \"space-between\",\n    },\n  },\n  dayContainer: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    gridGap: 4,\n  },\n});\n\nconst Forecast = ({ coords }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const forecast = useSelector((state) => state.weather.forecast);\n\n  useEffect(() => {\n    if (!!coords.lat && !!coords.lon) {\n      dispatch(fetchForecast(coords));\n    }\n  }, [dispatch, coords]);\n\n  return (\n    <div>\n      <div className={classes.forecastContainer}>\n        {!!forecast.list &&\n          forecast.list.map((listItem) => (\n            <div key={listItem.dt} className={classes.dayContainer}>\n              <h3 style={{ marginBottom: 0 }}>\n                {!!listItem.dt && moment(listItem.dt * 1000).format(\"ddd\")}\n              </h3>\n              <img\n                style={{ maxWidth: 50 }}\n                src={`https://openweathermap.org/img/wn/${listItem.weather[0].icon}@2x.png`}\n                alt={listItem.weather.main}\n              />\n              <div>\n                <span>{Math.round(listItem.temp.max)}&deg;</span> <span>|</span>{\" \"}\n                <span>{Math.round(listItem.temp.min)}&deg;</span>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  searchInput: {\n    padding: \"4px 8px\",\n    height: \"2rem\",\n    width: \"12rem\",\n    \"@media screen and (min-width: 768px)\": {\n      width: \"24rem\",\n    },\n    fontSize: 16,\n    boxShadow: \"0px 1px 4px 0px rgba(0,0,0,0.5)\",\n    outline: \"none\",\n    border: \"1px solid transparent\",\n  },\n});\n\nconst Search = ({ value, handleChange, results }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <input\n        className={classes.searchInput}\n        style={{ borderRadius: results ? \"4px 4px 0px 0px\" : 4 }}\n        onChange={handleChange}\n        vlaue={value}\n        name=\"Search...\"\n        placeholder=\"Search...\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import { useState, useLayoutEffect, useEffect, useMemo } from \"react\";\nimport Current from \"../features/current/Current\";\nimport Forecast from \"../features/forecast/Forecast\";\nimport { createUseStyles } from \"react-jss\";\nimport Search from \"../features/search/Search\";\nimport { debounce } from \"lodash\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\n\nconst useStyles = createUseStyles({\n  wrapper: {\n    padding: 16,\n    borderRadius: 4,\n    margin: \"2.5%\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0px 8px 12px 0px rgba(0,0,0,0.5)\",\n    \"@media screen and (min-width: 768px)\": {\n      margin: \"5% 12.5%\",\n    },\n    \"@media screen and (min-width: 1024px)\": {\n      margin: \"5% 25%\",\n    },\n  },\n  searchResultsContainer: {\n    position: \"relative\",\n    marginBottom: 16,\n    display: \"grid\",\n    gridTemplateColumns: \"2fr 1fr\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  searchResults: {\n    padding: 8,\n    width: \"12rem\",\n    \"@media screen and (min-width: 768px)\": {\n      width: \"24rem\",\n    },\n    maxHeight: \"12rem\",\n    overflowY: \"scroll\",\n    position: \"absolute\",\n    background: \"#fff\",\n    display: \"grid\",\n    gridAutoFlow: \"row\",\n    gridGap: 8,\n    top: 38,\n    border: \"1px solid transparent\",\n    borderRadius: \"0px 0px 4px 4px\",\n    boxShadow: \"0px 4px 4px 0px rgba(0,0,0,0.5)\",\n  },\n  searchResultItem: {\n    borderRadius: 4,\n    padding: \"8px 2px\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"#eee\",\n    },\n  },\n  getLocationcontainer: {\n    padding: 8,\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    alignItems: \"center\",\n    justifySelf: \"center\",\n    cursor: \"pointer\",\n    borderRadius: 4,\n    \"&:hover\": {\n      backgroundColor: \"#eee\",\n    },\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [coords, setCoords] = useState({\n    lat: \"\",\n    lon: \"\",\n  });\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getUserLoaction = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCoords({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        });\n      });\n    }\n  };\n\n  useLayoutEffect(() => {\n    getUserLoaction();\n  }, []);\n\n  const getSearchLocation = (value) => {\n    const geocoder = new window.google.maps.Geocoder();\n    if (geocoder) {\n      geocoder.geocode({ address: value }, (results, status) => {\n        if (status === \"OK\") {\n          setSearchResults([...results]);\n        } else {\n          setSearchResults({ formatted_address: \"Not found.\" });\n        }\n      });\n    }\n  };\n\n  const debouncedSearch = useMemo(() => debounce(getSearchLocation, 500), []);\n  useEffect(() => {\n    if (searchValue) {\n      debouncedSearch(searchValue);\n    }\n  }, [debouncedSearch, searchValue]);\n\n  const handleUpdateCoords = (coords) => {\n    setCoords({\n      lat: coords.lat(),\n      lon: coords.lng(),\n    });\n    setSearchValue(\"\");\n    setSearchResults([]);\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.searchResultsContainer}>\n        <div>\n          <Search\n            results={!!searchResults.length && !!searchValue.length}\n            handleChange={({ target: { value } }) => setSearchValue(value)}\n            value={searchValue}\n          />\n          {!!searchResults.length && !!searchValue.length && (\n            <div className={classes.searchResults}>\n              {searchResults.map((result) => (\n                <div\n                  key={result.formatted_address}\n                  onClick={() => handleUpdateCoords(result.geometry.location)}\n                  className={classes.searchResultItem}\n                >\n                  <span style={{ fontSize: 16 }}>\n                    {result.formatted_address}\n                  </span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        <div\n          className={classes.getLocationcontainer}\n          onClick={() => getUserLoaction()}\n        >\n          {<LocationOnIcon />}\n          <span style={{ fontSize: 12 }}>Get your location...</span>\n        </div>\n      </div>\n      <Current coords={coords} />\n      <Forecast coords={coords} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport weather from \"./weatherSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    weather,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}